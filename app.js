// ====================================================================
// JUEGO DE ADIVINANZA DE N√öMEROS
// Criterios: L√≥gica, bucle 'while', validaciones, prompt/alert/console.log
// ====================================================================

// --- 1. CONFIGURACI√ìN INICIAL (Variables) ---

// Recomendaci√≥n: Usar const para valores fijos
const MAX_INTENTOS = 3;
const LIMITE_MINIMO = 1;
const LIMITE_MAXIMO = 10;
const NOMBRE_JUGADOR = prompt("¬°Bienvenido! ¬øCu√°l es tu nombre?") || "Jugador(a)"; // Pide nombre, usa un valor por defecto si no lo ingresa

// L√≥gica del juego: Genera un n√∫mero secreto entre 1 y 10
// Math.floor(Math.random() * (max - min + 1)) + min
let numeroSecreto = Math.floor(Math.random() * (LIMITE_MAXIMO - LIMITE_MINIMO + 1)) + LIMITE_MINIMO;
let intentos = 1;

// --- Mensaje en consola que indique inicio del juego (Requerimiento) ---
console.log("========================================");
console.log(`üéÆ INICIO DEL JUEGO: Adivina el N√∫mero`);
console.log(`Hola, ${NOMBRE_JUGADOR}. Tienes ${MAX_INTENTOS} intentos.`);
console.log(`El n√∫mero secreto est√° entre ${LIMITE_MINIMO} y ${LIMITE_MAXIMO}.`);
console.log("========================================");


// --- 2. BUCLE PRINCIPAL DEL JUEGO (Uso de bucles) ---

// El juego contin√∫a mientras el jugador tenga intentos
while (intentos <= MAX_INTENTOS) {
    
    // Interfaz b√°sica: Usa prompt()
    // Recomendaci√≥n: Usa Number() para la conversi√≥n
    let numeroIntroducido = Number(prompt(`Intento ${intentos} de ${MAX_INTENTOS}. Introduce un n√∫mero entre ${LIMITE_MINIMO} y ${LIMITE_MAXIMO}:`));
    
    // --- 3. VALIDACIONES (Verifica rango, vac√≠o o mal escrito) ---
    
    // Valida que el n√∫mero no est√© vac√≠o (NaN) y est√© dentro del rango [1, 10]
    if (isNaN(numeroIntroducido) || numeroIntroducido > LIMITE_MAXIMO || numeroIntroducido < LIMITE_MINIMO) {
        
        // Mensajes claros (Interfaz b√°sica)
        alert(`‚ùå N√∫mero no v√°lido. Debes introducir un n√∫mero entre ${LIMITE_MINIMO} y ${LIMITE_MAXIMO}.`);
        console.warn(`[Intento ${intentos}] ${NOMBRE_JUGADOR} ingres√≥ un valor inv√°lido: ${numeroIntroducido}. No se consume el intento.`);
        
        // El 'continue' hace que el bucle salte a la siguiente iteraci√≥n sin contar el intento
        continue;
    }
    
    // Consola: Muestra el flujo y estado del juego
    console.log(`[Intento ${intentos}] ${NOMBRE_JUGADOR} introduce el n√∫mero: ${numeroIntroducido}`);
    
    // --- 4. L√ìGICA DEL JUEGO (Verificaci√≥n) ---
    
    if (numeroSecreto === numeroIntroducido) {
        // Correcto: GANA EL JUGADOR
        
        // Interfaz b√°sica: Usa alert() y console.log()
        alert(`üéâ ¬°CORRECTO, ${NOMBRE_JUGADOR}! ¬°GANASTE! El n√∫mero era ${numeroSecreto}.`);
        console.log(`üéâ FIN DEL JUEGO: ${NOMBRE_JUGADOR} GANA en ${intentos} intentos.`);
        
        // El 'break' sale inmediatamente del bucle (finaliza el juego)
        break;
        
    } else {
        // Incorrecto: Mostrar si es demasiado alto o demasiado bajo
        
        if (numeroIntroducido > numeroSecreto) {
            alert("‚¨áÔ∏è Demasiado ALTO. ¬°Int√©ntalo de nuevo!");
            console.log("Resultado: Demasiado ALTO.");
        } else {
            alert("‚¨ÜÔ∏è Demasiado BAJO. ¬°Int√©ntalo de nuevo!");
            console.log("Resultado: Demasiado BAJO.");
        }
    }

    // Incrementar el contador de intentos al final de cada ciclo v√°lido
    intentos++;
}

// --- 5. MENSAJE FINAL (Si se acabaron los intentos) ---

// Si el bucle termin√≥ y el n√∫mero de intentos es mayor que MAX_INTENTOS, el jugador perdi√≥.
if (intentos > MAX_INTENTOS) {
    // L√≥gica del juego: Mensaje final personalizado
    alert(`üòî Lo sentimos, ${NOMBRE_JUGADOR}. ¬°Te quedaste sin intentos!`);
    alert(`El n√∫mero secreto era ${numeroSecreto}. ¬°Mejor suerte la pr√≥xima!`);
    
    // Consola: Mensaje de fin del juego (Requerimiento)
    console.log(`‚ùå FIN DEL JUEGO: ${NOMBRE_JUGADOR} PIERDE. Se agotaron los ${MAX_INTENTOS} intentos.`);
}

console.log("========================================");